
name: Patient Service CI/CD 
on:
  push:
    branches:
      - main  
  workflow_dispatch: null
  
  pull_request:
    branches:
      - main
jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{secrets.AWS_REGION}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v3.0.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=pharma-proj -Dsonar.host.url=${{ env.SONAR_HOST_URL
            }} -Dsonar.login=${{ env.SONAR_TOKEN }}
            -Dsonar.working.directory=./.scannerwork

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: pharma_ecr_repo
          IMAGE_TAG: pharma-apatient-app
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
           version: 'v1.24.0' 
        id: install
      - name: Update kube config
        run: aws eks update-kubeconfig --region us-east-1 --name demo
      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
